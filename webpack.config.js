const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const CopyWebpackPlugin = require('copy-webpack-plugin');
const webpack = require('webpack');

module.exports = {
    mode: 'none',
    entry: {
        root: './src/root.tsx',
        fourOhFour: './src/404.tsx'
    },
    output: {
        filename: 'js/[name].bundle.js',
        path: path.resolve(__dirname, 'dist'),
        publicPath: '/',
    },
    resolve: {
        extensions: ['.ts', '.tsx', '.js', '.jsx'],
        alias: {
            '@': path.resolve(__dirname, 'src/'),
        },
    },
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/,
                exclude: /node_modules/,
                use: {
                    loader: 'babel-loader',
                    options: {
                    presets: ['@babel/preset-env', '@babel/preset-react'],
                    },
                },
            },
            {
                test: /\.(scss|sass)$/,
                use: [
                    'style-loader', // Injects CSS into the DOM.
                    'css-loader',   // Translates CSS into CommonJS modules.
                    'sass-loader'   // Compiles Sass to CSS.
                ],
            },
            {
                test: /\.css$/,
                use: ['style-loader', 'css-loader'],
            },
            {
                test: /\.svg$/,
                use: {
                    loader: 'file-loader',
                    options: {
                        name: '[name].[ext]',
                        outputPath: 'img/',
                        publicPath: '/img/',
                    },
                },
            },
            {
                test: /\.(ts|tsx)$/,
                use: 'ts-loader',
                exclude: /node_modules/,
            },
        ],
    },
    devServer: {
        static: {
            directory: path.join(__dirname, 'dist'),
        },
        compress: true,
        port: 8000,
        open: true,
        hot: true,
        liveReload: true,
    },
    plugins: [
        new HtmlWebpackPlugin({
            title: 'Root',
            template: './public/root.html',
            filename: 'root.html',
            chunks: ['root'],
        }),
        new HtmlWebpackPlugin({
            title: '404',
            template: './public/404.html',
            filename: '404.html',
            chunks: ['fourOhFour'],
        }),
        new CopyWebpackPlugin({
            patterns: [
                {
                    from: 'public/img/',
                    to: 'img',
                    globOptions: {
                        gitignore: true,
                        ignore: ['**/.DS_Store', '**/Thumbs.db'],
                    },
                },
                {
                    from: 'public/robots.txt',
                    to: 'robots.txt',
                },
            ],
        }),
        new webpack.DefinePlugin({
            'process.env': JSON.stringify(process.env)
        }),
    ]
};
