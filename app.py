# configure logging
import logging, sys

logging.basicConfig(
    stream=sys.stdout,
    level=logging.INFO,
    format="%(asctime)s.%(msecs)03d (%(levelname)s | %(filename)s:%(lineno)d) - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
)

# native
import logging
import sys
import os

# third-party
from flask import Flask, render_template

# internal
from routes.assets import asset_routes
from routes.public import public_routes

# this is the location of the html and js files that are served to the client
DIST_LOCATION = "./dist"

# initialize the Flask and SocketIO objects
app = Flask(__name__, template_folder=DIST_LOCATION)
app.config["DIST_LOCATION"] = DIST_LOCATION

# routes
app.register_blueprint(asset_routes)
app.register_blueprint(public_routes)


# catchall 404 fallback
@app.route("/<path:path>", methods=["GET"])
def catch_all(path):
    return render_template("404.html")


# start app in debug mode if run directly without gunicorn
if __name__ == "__main__":
    app.run()
